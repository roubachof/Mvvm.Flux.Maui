<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>

<ResourceDictionary xmlns="http://xamarin.com/schemas/2014/forms"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                    xmlns:converters="clr-namespace:Symbiot.Mobile.Presentation.Converters;assembly=Symbiot.Mobile"
                    xmlns:customViews="clr-namespace:Symbiot.Mobile.Presentation.CustomViews;assembly=Symbiot.Mobile"
                    xmlns:forms="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
                    xmlns:loc="clr-namespace:Symbiot.Mobile.Localization;assembly=Symbiot.Mobile"
                    xmlns:sho="http://sharpnado.com"
                    xmlns:tlv="clr-namespace:Sharpnado.Presentation.Forms.CustomViews;assembly=Sharpnado.TaskLoaderView">

    <Style TargetType="ActivityIndicator">
        <Setter Property="Color" Value="{StaticResource AccentColor}" />
    </Style>

    <Style x:Key="OverlaySaving"
           TargetType="customViews:OverlayView">
        <Setter Property="Text" Value="{x:Static loc:GlobalResources.Common_Saving}" />
        <Setter Property="Icon" Value="{StaticResource IconSavingWhite}" />
    </Style>

    <Style TargetType="customViews:Snackbar">
        <Setter Property="FontFamily" Value="FontSemiBold" />
        <Setter Property="TextColor" Value="{StaticResource TextPrimaryDarkColor}" />
        <Setter Property="TextSize" Value="{StaticResource TextSizeBody}" />
        <Setter Property="BackgroundColor" Value="{StaticResource PrimaryColor}" />
        <Setter Property="Margin" Value="{StaticResource MarginItemDefault}" />
        <Setter Property="VerticalOptions" Value="End" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="DisplayDurationMilliseconds" Value="5000" />
    </Style>

    <Style ApplyToDerivedTypes="True"
           TargetType="tlv:TaskLoaderView">
        <Setter Property="AccentColor" Value="{StaticResource AccentColor}" />
        <Setter Property="FontFamily" Value="FontSemiBold" />
        <Setter Property="RetryButtonText" Value="{x:Static loc:GlobalResources.Common_Retry}" />
        <Setter Property="TextColor" Value="{StaticResource TextPrimaryColor}" />
        <Setter Property="ErrorImageConverter" Value="{converters:ExceptionToImageSourceConverter}" />
        <Setter Property="ErrorMessageConverter" Value="{converters:ExceptionToErrorMessageConverter}" />
        <Setter Property="NotificationBackgroundColor" Value="{StaticResource PrimaryColor}" />
        <Setter Property="NotificationTextColor" Value="{StaticResource TextPrimaryDarkColor}" />
    </Style>

    <DataTemplate x:Key="LottieRocket">
        <forms:AnimationView AbsoluteLayout.LayoutFlags="PositionProportional"
                             AbsoluteLayout.LayoutBounds="0.5, 0.4, 200, 200"
                             HorizontalOptions="FillAndExpand"
                             VerticalOptions="FillAndExpand"
                             Animation="rocket_launch.json"
                             IsAnimating="{Binding Source={RelativeSource AncestorType={x:Type tlv:TaskLoaderView}},
                                                   Path=TaskLoaderNotifier.ShowLoader}"
                             RepeatMode="Infinite" />
    </DataTemplate>

    <DataTemplate x:Key="LottieRocketMarginTop">
        <forms:AnimationView AbsoluteLayout.LayoutFlags="XProportional"
                             AbsoluteLayout.LayoutBounds="0.5, 120, 300, 300"
                             HorizontalOptions="FillAndExpand"
                             VerticalOptions="FillAndExpand"
                             Animation="rocket_launch.json"
                             IsAnimating="{Binding Source={RelativeSource AncestorType={x:Type tlv:TaskLoaderView}},
                                                   Path=TaskLoaderNotifier.ShowLoader}"
                             RepeatMode="Infinite" />
    </DataTemplate>

    <DataTemplate x:Key="ActivityIndicatorMarginTop">
        <ActivityIndicator AbsoluteLayout.LayoutFlags="XProportional, SizeProportional"
                           AbsoluteLayout.LayoutBounds="1, 100, 1, 1"
                           HorizontalOptions="Center"
                           VerticalOptions="Start"
                           IsRunning="{Binding Source={RelativeSource AncestorType={x:Type tlv:TaskLoaderView}},
                                               Path=TaskLoaderNotifier.ShowLoader}" />
    </DataTemplate>

    <DataTemplate x:Key="ErrorView">
        <StackLayout AbsoluteLayout.LayoutFlags="All"
                     AbsoluteLayout.LayoutBounds="1, 1, 1, 1"
                     HorizontalOptions="Center"
                     VerticalOptions="Center"
                     BindingContext="{Binding Source={RelativeSource AncestorType={x:Type tlv:TaskLoaderView}},
                                              Path=TaskLoaderNotifier}"
                     IsVisible="False"
                     Orientation="Vertical"
                     Spacing="10">
            <Frame Style="{StaticResource RoundedFrame}"
                   WidthRequest="{StaticResource SizeTaskLoaderIcon}"
                   HeightRequest="{StaticResource SizeTaskLoaderIcon}"
                   Margin="0,0,0,10"
                   BackgroundColor="{StaticResource PrimaryColor}">
                <Image HorizontalOptions="Center"
                       VerticalOptions="Center"
                       Source="{Binding Error,
                                        Converter={converters:ExceptionToImageSourceConverter}}" />
            </Frame>
            <Label Style="{StaticResource TextBodySecondary}"
                   WidthRequest="300"
                   Margin="0,0,0,20"
                   HorizontalTextAlignment="Center"
                   LineBreakMode="WordWrap"
                   MaxLines="2"
                   Text="{Binding Error,
                                  Converter={converters:ExceptionToErrorMessageConverter}}" />
            <sho:Shadows CornerRadius="10"
                         Shades="{StaticResource ShadowAccentBottom}">
                <Button Style="{StaticResource ButtonAccent}"
                        HorizontalOptions="Center"
                        VerticalOptions="End"
                        Command="{Binding ReloadCommand}"
                        Text="{x:Static loc:GlobalResources.Common_Retry}" />
            </sho:Shadows>
        </StackLayout>
    </DataTemplate>

    <DataTemplate x:Key="ErrorViewMarginTop">
        <StackLayout AbsoluteLayout.LayoutFlags="XProportional, SizeProportional"
                     AbsoluteLayout.LayoutBounds="1, 50, 1, 1"
                     HorizontalOptions="Center"
                     VerticalOptions="Start"
                     BindingContext="{Binding Source={RelativeSource AncestorType={x:Type tlv:TaskLoaderView}},
                                              Path=TaskLoaderNotifier}"
                     IsVisible="False"
                     Orientation="Vertical"
                     Spacing="10">
            <Frame Style="{StaticResource RoundedFrame}"
                   WidthRequest="{StaticResource SizeTaskLoaderIcon}"
                   HeightRequest="{StaticResource SizeTaskLoaderIcon}"
                   Margin="0,0,0,10"
                   BackgroundColor="{StaticResource PrimaryColor}">
                <Image HorizontalOptions="Center"
                       VerticalOptions="Center"
                       Source="{Binding Error,
                                        Converter={converters:ExceptionToImageSourceConverter}}" />
            </Frame>
            <Label Style="{StaticResource TextBodySecondary}"
                   WidthRequest="300"
                   Margin="0,0,0,20"
                   HorizontalTextAlignment="Center"
                   LineBreakMode="WordWrap"
                   MaxLines="2"
                   Text="{Binding Error,
                                  Converter={converters:ExceptionToErrorMessageConverter}}" />
            <sho:Shadows CornerRadius="10"
                         Shades="{StaticResource ShadowAccentBottom}">
                <Button Style="{StaticResource ButtonAccent}"
                        HorizontalOptions="Center"
                        VerticalOptions="End"
                        Command="{Binding ReloadCommand}"
                        Text="{x:Static loc:GlobalResources.Common_Retry}" />
            </sho:Shadows>
        </StackLayout>
    </DataTemplate>

    <!--<DataTemplate x:Key="ErrorNotificationView">
        <ContentView AbsoluteLayout.LayoutFlags="PositionProportional,WidthProportional"
                     AbsoluteLayout.LayoutBounds="0, 1, 1, AutoSize">
            <ContentView.Behaviors>
                <behaviors:TimedVisibilityBehavior VisibilityInSeconds="4" />
            </ContentView.Behaviors>
            <sho:Shadows Margin="{StaticResource MarginItemDefault}"
                         VerticalOptions="End"
                         Shades="{StaticResource ShadowBottom}">
                <Frame Padding="20"
                       BackgroundColor="{StaticResource PrimaryColor}">
                    <Label Style="{StaticResource TextBody}"
                           HorizontalOptions="Center"
                           VerticalOptions="Center"
                           FontFamily="FontSemiBold"
                           LineBreakMode="WordWrap"
                           MaxLines="2"
                           Text="{Binding Source={RelativeSource AncestorType={x:Type tlv:TaskLoaderView}},
                                          Path=TaskLoaderNotifier.Error,
                                          Converter={converters:ExceptionToErrorMessageConverter}}"
                           TextColor="{StaticResource TextPrimaryDarkColor}" />
                </Frame>
            </sho:Shadows>
        </ContentView>
    </DataTemplate>-->

    <DataTemplate x:Key="ErrorNotificationView">
        <customViews:Snackbar AbsoluteLayout.LayoutFlags="PositionProportional,WidthProportional"
                              AbsoluteLayout.LayoutBounds="0, 1, 1, 100"
                              Text="{Binding Source={RelativeSource AncestorType={x:Type tlv:TaskLoaderView}},
                                             Path=TaskLoaderNotifier.Error,
                                             Converter={converters:ExceptionToErrorMessageConverter}}" />
    </DataTemplate>

    <Style x:Key="TaskLoaderViewPage"
           TargetType="tlv:TaskLoaderView">
        <Setter Property="ErrorNotificationView" Value="{StaticResource ErrorNotificationView}" />
        <Setter Property="LoadingView" Value="{StaticResource LottieRocket}" />
        <Setter Property="ErrorView" Value="{StaticResource ErrorView}" />
    </Style>

    <Style x:Key="TaskLoaderViewMarginTop"
           TargetType="tlv:TaskLoaderView">
        <Setter Property="ErrorNotificationView" Value="{StaticResource ErrorNotificationView}" />
        <Setter Property="LoadingView" Value="{StaticResource LottieRocketMarginTop}" />
        <Setter Property="ErrorView" Value="{StaticResource ErrorViewMarginTop}" />
    </Style>

    <Style x:Key="TaskLoaderViewError"
           TargetType="tlv:TaskLoaderView">
        <Setter Property="ErrorView" Value="{StaticResource ErrorViewMarginTop}" />
        <Setter Property="LoadingView" Value="{StaticResource ActivityIndicatorMarginTop}" />
    </Style>

</ResourceDictionary>